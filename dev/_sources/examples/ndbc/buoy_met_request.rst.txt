
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/ndbc/buoy_met_request.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_ndbc_buoy_met_request.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_ndbc_buoy_met_request.py:


NDBC Buoy Meteorological Data Request
=====================================

The NDBC keeps a 45-day recent rolling file for each buoy. This examples shows how to access
the basic meteorological data from a buoy and make a simple plot.

.. GENERATED FROM PYTHON SOURCE LINES 11-16

.. code-block:: Python


    import matplotlib.pyplot as plt

    from siphon.simplewebservice.ndbc import NDBC








.. GENERATED FROM PYTHON SOURCE LINES 17-19

Get a pandas data frame of all of the observations, meteorological data is the default
observation set to query.

.. GENERATED FROM PYTHON SOURCE LINES 19-22

.. code-block:: Python

    df = NDBC.realtime_observations('46006')
    df.head()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>wind_direction</th>
          <th>wind_speed</th>
          <th>wind_gust</th>
          <th>wave_height</th>
          <th>dominant_wave_period</th>
          <th>average_wave_period</th>
          <th>dominant_wave_direction</th>
          <th>pressure</th>
          <th>air_temperature</th>
          <th>water_temperature</th>
          <th>dewpoint</th>
          <th>visibility</th>
          <th>3hr_pressure_tendency</th>
          <th>water_level_above_mean</th>
          <th>time</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>0</th>
          <td>360.0</td>
          <td>5.0</td>
          <td>6.0</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>1031.0</td>
          <td>NaN</td>
          <td>12.2</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>2025-04-22 22:30:00+00:00</td>
        </tr>
        <tr>
          <th>1</th>
          <td>360.0</td>
          <td>5.0</td>
          <td>6.0</td>
          <td>1.3</td>
          <td>15.0</td>
          <td>6.4</td>
          <td>277.0</td>
          <td>1031.1</td>
          <td>NaN</td>
          <td>12.2</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>2025-04-22 22:20:00+00:00</td>
        </tr>
        <tr>
          <th>2</th>
          <td>10.0</td>
          <td>5.0</td>
          <td>6.0</td>
          <td>1.3</td>
          <td>NaN</td>
          <td>6.4</td>
          <td>277.0</td>
          <td>1031.1</td>
          <td>NaN</td>
          <td>12.2</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>2025-04-22 22:10:00+00:00</td>
        </tr>
        <tr>
          <th>3</th>
          <td>10.0</td>
          <td>5.0</td>
          <td>7.0</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>1031.1</td>
          <td>NaN</td>
          <td>12.2</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>-0.7</td>
          <td>NaN</td>
          <td>2025-04-22 22:00:00+00:00</td>
        </tr>
        <tr>
          <th>4</th>
          <td>360.0</td>
          <td>5.0</td>
          <td>6.0</td>
          <td>1.3</td>
          <td>11.0</td>
          <td>6.4</td>
          <td>300.0</td>
          <td>1031.1</td>
          <td>NaN</td>
          <td>12.2</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>2025-04-22 21:50:00+00:00</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 23-24

Let's make a simple time series plot to checkout what the data look like.

.. GENERATED FROM PYTHON SOURCE LINES 24-43

.. code-block:: Python

    fig, (ax1, ax2, ax3) = plt.subplots(3, 1, figsize=(12, 10))
    ax2b = ax2.twinx()

    # Pressure
    ax1.plot(df['time'], df['pressure'], color='black')
    ax1.set_ylabel('Pressure [hPa]')

    # Wind speed, gust, direction
    ax2.plot(df['time'], df['wind_speed'], color='tab:orange')
    ax2.plot(df['time'], df['wind_gust'], color='tab:olive', linestyle='--')
    ax2b.plot(df['time'], df['wind_direction'], color='tab:blue', linestyle='-')
    ax2.set_ylabel('Wind Speed [m/s]')
    ax2b.set_ylabel('Wind Direction')

    # Water temperature
    ax3.plot(df['time'], df['water_temperature'], color='tab:brown')
    ax3.set_ylabel('Water Temperature [degC]')

    plt.show()



.. image-sg:: /examples/ndbc/images/sphx_glr_buoy_met_request_001.png
   :alt: buoy met request
   :srcset: /examples/ndbc/images/sphx_glr_buoy_met_request_001.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.521 seconds)


.. _sphx_glr_download_examples_ndbc_buoy_met_request.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: buoy_met_request.ipynb <buoy_met_request.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: buoy_met_request.py <buoy_met_request.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: buoy_met_request.zip <buoy_met_request.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
